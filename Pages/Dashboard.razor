@page "/dashboard"
@inject Services.UserService UserService
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>Panel Administrativo | Cirsa</PageTitle>


<div class="container py-4 jumbotron-a">


    <div class="container">
        <div class="row">

            <div class="col-12 col-md-6">
                <h3 class="fw-bold"> Afiliación </h3>
                <p>
                    Personaliza tu página de afiliado, compártela con los clientes a través del siguiente enlace
                </p>
            </div>

            <div class="col-12 col-md-6">

                <form class="user-form">

                    <div class="mb-3">
                        <label for="exampleInputEmail1" class="form-label">Link de afiliado</label>
                        <input value="@NavigationManager.ToAbsoluteUri("/dashboard/aff/")@UserService.GetLoggedUser().GetId()" class="form-control" id="nameInput" readonly>
                    </div>

                </form>

            </div>

        </div>
    </div>

</div>


@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}